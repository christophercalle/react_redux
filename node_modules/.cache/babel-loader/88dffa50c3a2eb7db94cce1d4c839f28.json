{"ast":null,"code":"import R from 'ramda';\nexport var getPhoneById = function getPhoneById(state, id) {\n  return R.prop(id, state.phones);\n};\nexport var getPhones = function getPhones(state, ownProps) {\n  var activeCategoryId = getActiveCategoryId(ownProps);\n\n  var applySearch = function applySearch(item) {\n    return R.contains(state.phonesPage.search, R.prop('name', item));\n  };\n\n  var applyCategory = function applyCategory(item) {\n    return R.equals(activeCategoryId, R.prop('categoryId', item));\n  };\n\n  var phones = R.compose(R.filter(applySearch), R.when(R.always(activeCategoryId), R.filter(applyCategory)), R.map(function (id) {\n    return getPhoneById(state, id);\n  }))(state.phonesPage.ids);\n  return phones;\n};\nexport var getRenderedPhonesLength = function getRenderedPhonesLength(state) {\n  return R.length(state.phonesPage.ids);\n};\nexport var getTotalBasketCount = function getTotalBasketCount(state) {\n  return R.length(state.basket);\n};\nexport var getTotalBasketPrice = function getTotalBasketPrice(state) {\n  var totalPrice = R.compose(R.sum, R.pluck('price'), R.map(function (id) {\n    return getPhoneById(state, id);\n  }))(state.basket);\n  return totalPrice;\n};\nexport var getCategories = function getCategories(state) {\n  return R.values(state.categories);\n};\nexport var getActiveCategoryId = function getActiveCategoryId(ownProps) {\n  return R.path(['params', 'id'], ownProps);\n};\nexport var getBasketPhonesWithCount = function getBasketPhonesWithCount(state) {\n  var phoneCount = function phoneCount(id) {\n    return R.compose(R.length, R.filter(function (basketId) {\n      return R.equals(id, basketId);\n    }))(state.basket);\n  };\n\n  var phoneWithCount = function phoneWithCount(phone) {\n    return R.assoc('count', phoneCount(phone.id), phone);\n  };\n\n  var uniqueIds = R.uniq(state.basket);\n  var phones = R.compose(R.map(phoneWithCount), R.map(function (id) {\n    return getPhoneById(state, id);\n  }))(uniqueIds);\n  return phones;\n};","map":{"version":3,"sources":["/Users/christophercalle/Desktop/CLONE/react_redux/src/node_modules/selectors.js"],"names":["R","getPhoneById","state","id","prop","phones","getPhones","ownProps","activeCategoryId","getActiveCategoryId","applySearch","item","contains","phonesPage","search","applyCategory","equals","compose","filter","when","always","map","ids","getRenderedPhonesLength","length","getTotalBasketCount","basket","getTotalBasketPrice","totalPrice","sum","pluck","getCategories","values","categories","path","getBasketPhonesWithCount","phoneCount","basketId","phoneWithCount","phone","assoc","uniqueIds","uniq"],"mappings":"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","sourcesContent":["import R from 'ramda'\n\nexport const getPhoneById = (state, id) => R.prop(id, state.phones)\n\nexport const getPhones = (state, ownProps) => {\n  const activeCategoryId = getActiveCategoryId(ownProps)\n  const applySearch = item => R.contains(\n    state.phonesPage.search,\n    R.prop('name', item)\n  )\n  const applyCategory = item => R.equals(\n    activeCategoryId,\n    R.prop('categoryId', item)\n  )\n\n  const phones = R.compose(\n    R.filter(applySearch),\n    R.when(R.always(activeCategoryId), R.filter(applyCategory)),\n    R.map(id => getPhoneById(state, id))\n  )(state.phonesPage.ids)\n\n  return phones\n}\n\nexport const getRenderedPhonesLength = state => R.length(state.phonesPage.ids)\n\nexport const getTotalBasketCount = state => R.length(state.basket)\n\nexport const getTotalBasketPrice = state => {\n  const totalPrice = R.compose(\n    R.sum,\n    R.pluck('price'),\n    R.map(id => getPhoneById(state, id))\n  )(state.basket)\n\n  return totalPrice\n}\n\nexport const getCategories = state => R.values(state.categories)\n\nexport const getActiveCategoryId = ownProps => R.path(['params', 'id'], ownProps)\n\nexport const getBasketPhonesWithCount = state => {\n  const phoneCount = id => R.compose(\n    R.length,\n    R.filter(basketId => R.equals(id, basketId))\n  )(state.basket)\n  const phoneWithCount = phone => R.assoc('count', phoneCount(phone.id), phone)\n\n  const uniqueIds = R.uniq(state.basket)\n  const phones = R.compose(\n    R.map(phoneWithCount),\n    R.map(id => getPhoneById(state, id))\n  )(uniqueIds)\n\n  return phones\n}\n"]},"metadata":{},"sourceType":"module"}