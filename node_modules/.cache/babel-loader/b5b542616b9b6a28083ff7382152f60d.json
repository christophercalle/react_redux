{"ast":null,"code":"import R from 'ramda';\nimport { FETCH_PHONES_SUCCESS, FETCH_PHONE_BY_ID_SUCCESS, LOAD_MORE_PHONES_SUCCESS } from 'actionTypes';\nvar initialState = {};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case FETCH_PHONES_SUCCESS:\n      var newValues = R.indexBy(R.prop('id'), payload);\n      return R.merge(state, newValues);\n\n    case LOAD_MORE_PHONES_SUCCESS:\n      var moreValues = R.indexBy(R.prop('id'), payload);\n      return R.merge(state, moreValues);\n\n    case FETCH_PHONE_BY_ID_SUCCESS:\n      return R.assoc(payload.id, payload, state);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/christophercalle/Desktop/CLONE/react_redux/src/node_modules/reducers/phones.js"],"names":["R","FETCH_PHONES_SUCCESS","FETCH_PHONE_BY_ID_SUCCESS","LOAD_MORE_PHONES_SUCCESS","initialState","state","type","payload","newValues","indexBy","prop","merge","moreValues","assoc","id"],"mappings":"AAAA,OAAOA,CAAP,MAAc,OAAd;AAEA,SACEC,oBADF,EAEEC,yBAFF,EAGEC,wBAHF,QAIO,aAJP;AAMA,IAAMC,YAAY,GAAG,EAArB;AAEA,gBAAe,YAA2C;AAAA,MAA1CC,KAA0C,uEAAlCD,YAAkC;;AAAA;AAAA,MAAnBE,IAAmB,QAAnBA,IAAmB;AAAA,MAAbC,OAAa,QAAbA,OAAa;;AACxD,UAAQD,IAAR;AACE,SAAKL,oBAAL;AACE,UAAMO,SAAS,GAAGR,CAAC,CAACS,OAAF,CAAUT,CAAC,CAACU,IAAF,CAAO,IAAP,CAAV,EAAwBH,OAAxB,CAAlB;AACA,aAAOP,CAAC,CAACW,KAAF,CAAQN,KAAR,EAAeG,SAAf,CAAP;;AACF,SAAKL,wBAAL;AACE,UAAMS,UAAU,GAAGZ,CAAC,CAACS,OAAF,CAAUT,CAAC,CAACU,IAAF,CAAO,IAAP,CAAV,EAAwBH,OAAxB,CAAnB;AACA,aAAOP,CAAC,CAACW,KAAF,CAAQN,KAAR,EAAeO,UAAf,CAAP;;AACF,SAAKV,yBAAL;AACE,aAAOF,CAAC,CAACa,KAAF,CAAQN,OAAO,CAACO,EAAhB,EAAoBP,OAApB,EAA6BF,KAA7B,CAAP;;AACF;AACE,aAAOA,KAAP;AAVJ;AAYD,CAbD","sourcesContent":["import R from 'ramda'\n\nimport {\n  FETCH_PHONES_SUCCESS,\n  FETCH_PHONE_BY_ID_SUCCESS,\n  LOAD_MORE_PHONES_SUCCESS\n} from 'actionTypes'\n\nconst initialState = {}\n\nexport default (state = initialState, {type, payload}) => {\n  switch (type) {\n    case FETCH_PHONES_SUCCESS:\n      const newValues = R.indexBy(R.prop('id'), payload)\n      return R.merge(state, newValues)\n    case LOAD_MORE_PHONES_SUCCESS:\n      const moreValues = R.indexBy(R.prop('id'), payload)\n      return R.merge(state, moreValues)\n    case FETCH_PHONE_BY_ID_SUCCESS:\n      return R.assoc(payload.id, payload, state)\n    default:\n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}